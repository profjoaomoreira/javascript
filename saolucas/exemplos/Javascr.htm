<html>

<head><script language="JavaScript">
<!-- Hiding
     function pushbutton() {
       alert("Alo!");
     }
     function getname(str) {
       alert("Oi, "+ str+"!");
     }
     function stat(txt) {
        window.status = txt;
        setTimeout("erase()",1500);
      }
     function erase() {
       window.status="";
     }
// -->
</script>

<title>Introdução ao JavaScript - Parte 1</title>
<style TYPE="text/css">
<!--
	A:link {font-weight: bold; text-decoration: none}
	A:visited {font-weight: bold; text-decoration: none}
        A:hover { font-weight: bold; color:blue;}
-->
</style>
</head>

<body bgcolor="#FFFFFF" text="#000000" link="#000000" vlink="#000000" alink="#000000">

<p align="center"><a name="what"><font face="MS Sans Serif" size="1" color="#000000"><strong>Introdução
ao JavaScript<br>
</strong></font></a><img src="Jsd1.gif" width="78" height="67" alt="Parte 1"></p>

<hr WIDTH="80%" ALIGN="center" SIZE="1">

<p align="center"><font face="MS Sans Serif" size="1" color="#000000"><br>
<br>
</font></p>

<h2 align="left"><font face="MS Sans Serif" size="1" color="#000000">O que é JavaScript? </font></h2>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">JavaScript &nbsp;é
uma nova linguagem para páginas Web. Os scripts escritos com JavaScript podem ser
colocados dentro das suas páginas HTML. Com JavaScript você tem muitíssimas
possibilidades de melhorar a sua página HTML com elementos interessantes. Você é capaz,
por exemplo, de responder muito facilmente a eventos iniciados pelo usuário. Alguns dos
efeitos que agora podemos fazer com Javascript, há algum tempo atrás só eram possíveis
com CGI. Deste modo, você pode criar páginas muito sofisticadas com a ajuda do
JavaScript. Você pode achar também muitos exemplos de scripts de Javascript na Internet.
O melhor que se tem a fazer, então, é dar uma olhada em algumas páginas melhoradas com
JavaScript. Você vai achar muitos desses links em </font><font face="MS Sans Serif"
size="1" color="#000000"><a href="http://www.gamelan.com">Gamelan</a> (na seção de
JavaScript). Você tambem encontrará a documentação publicada pela Netscape em </font><font
face="MS Sans Serif" size="1" color="#000000"><a href="http://home.netscape.com">http://home.netscape.com</a>.
</font></p>

<h2 align="left"><font face="MS Sans Serif" size="1" color="#000000">Qual é a diferença
entre Java e JavaScript? </font></h2>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">Ainda que os nomes
sejam quase os mesmos, Java não é a mesma coisa que JavaScript! Essas são duas
técnicas diferentes de programação na Internet. Java é uma linguagem de programação.
JavaScript é uma linguagem de scripting (tal como diz o nome). A diferença é que se
pode criar programas reais com Java. O mais das vezes, porém, você quer apenas criar um
efeito chamativo, sem se importar com qualquer programa real. Assim, JavaScript foi
pensado como algo fácil de se compreender e de se usar. Os autores de JavaScript não
têm que se importar muito com programação. Nós poderíamos até dizer que JavaScript
é muito mais uma extensão do HTML do que uma linguagem de computador separada.
Naturalmente essa não é uma definição &quot;oficial&quot; mas acho que ela torna mais
compreensível a diferença entre Java e JavaScript. Você pode encontrar informações
adicionais acerca de Java e JavaScript em </font><font face="MS Sans Serif" size="1"
color="#000000"><a href="http://www.gamelan.com">Gamelan</a>. </font></p>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">Para informações
adicionais acerca desse tópico, leia a introdução fornecida pela </font><font
face="MS Sans Serif" size="1" color="#000000"><a href="http://home.netscape.com">Netscape</a>.
</font></p>

<p align="center"><font face="MS Sans Serif" size="1" color="#000000"><br>
</font></p>

<hr WIDTH="80%" ALIGN="center" SIZE="1">

<p align="center"><font face="MS Sans Serif" size="1" color="#000000"><br>
<br>
</font></p>

<h2 align="center"><font face="MS Sans Serif" size="1" color="#000000"><a name="run">Como
os scripts do JavaScript podem ser rodados? </a></font></h2>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">O primeiro browser a
suportar JavaScript foi o Netscape Navigator 2.0. É claro que as versões maiores também
rodam JavaScript. Você deve saber que nem toda as versões de &nbsp;Netscape Navigator
2.0 (ou maiores) rodam Java. Mas isso não é verdadeiro para o JavaScript - ainda que
existam problemas entre as diferentes versões. A versão Mac, por exemplo, parece ter
apresentado muito defeito. No futuro próximo deverá haver outros browsers que
suportarão também o JavaScript. O Microsoft Internet Explorer 3.0, por exemplo,
suportará JavaScript. Browsers habilitados ao JavaScript tendem a se tornar daqui a pouco
muito populares, por isso vale a pena aprender essa técnica logo. Você já deve estar
imaginando que é realmente fácil escrever scripts de JavaScript. Tudo o que se tem a
fazer é conhecer algumas técnicas básicas, e trabalhar algum tempo em torno dos
problemas que você pode encontrar.<br>
Naturalmente, você vai necessitar de um conhecimento básico de HTML antes de começar a
ler este tutorial. Você pode achar muitos recursos on-line sobre HTML que são
excelentes. O melhor é fazer uma busca on-line de 'html' no </font><font
face="MS Sans Serif" size="1" color="#000000"><a href="http://www.yahoo.com">Yahoo</a>, se
você quer ficar por dentro da matéria. (Esses documentos on-line são freqüentemente
mais atualizados do que livros: a Internet anda muito rápida atualmente...)<br>
</font></p>

<hr WIDTH="80%" ALIGN="center" SIZE="1">

<p align="left"><font face="MS Sans Serif" size="1" color="#000000"><br>
<br>
Agora eu quero lhe mostrar alguns pequenos scripts. Assim você pode aprender como eles
são implementados nos documentos em HTML e ficar sabendo quais são as possibilidades da
nova linguagem de scripting. Eu começarei com um script muito pequeno, que só imprime um
texto num documento HTML. </font></p>
<div align="left">

<pre><font face="MS Sans Serif" size="1" color="#000000">
&lt;html&gt;
&lt;head&gt;
Meu primeiro JavaScript!
&lt;/head&gt;
&lt;body&gt;
&lt;br&gt;
Este é um documento HTML normal.
&lt;br&gt;
  &lt;script language=&quot;JavaScript&quot;&gt;
    document.write(&quot;Este é um JavaScript!&quot;)
  &lt;/script&gt;
&lt;br&gt;
De volta ao HTML.
&lt;/body&gt;
&lt;/html&gt;
</font></pre>
</div>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">Se você estiver
usando um browser habilitado ao JavaScript, neste momento você estará vendo este script
funcionar. Se o seu browser não suporta JavaScript então este resultado deve ser algo
estranho... </font></p>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000"><i>Este é um
documento HTML normal. <br>
<script language="JavaScript">
<!-- Hiding
document.write("Este &amp;eacute; um JavaScript!")
// --> </script> <br>
De volta ao HTML.</i> </font></p>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">Devo admitir que este
script não é muito útil. Você poderia escrever a mesma coisa no HTML de maneira muito
mais rápida e curta. Mas o que eu quis mostrar é como você deve usar os tags
&lt;script&gt;. Você pode usar esses tags no seu documento no lugar que quiser. <br>
</font></p>

<hr WIDTH="80%" ALIGN="center" SIZE="1">

<p align="left"><font face="MS Sans Serif" size="1" color="#000000"><br>
<br>
Eu não desejo aborrecê-lo com scripts tão estúpidos. Vamos passar logo para as
funções. Elas também não são difíceis de se entender, mas, acredite-me, são muito
mais úteis! As funções são melhor declaradas entre os tags de &lt;head&gt; da sua
página-HTML. As funções são convocadas por eventos iniciados pelo usuário. Por isso
é razoável manter as funções entre os tags de &lt;head&gt;. Elas são carregadas antes
que o usuário possa fazer alguma ação que chamará a função. Os scripts podem ser
colocados entre os campos de comentários internos para assegurar que os antigos browsers
não mostrem o próprio script. </font></p>
<div align="left">

<pre><font face="MS Sans Serif" size="1" color="#000000">
&lt;html&gt;
&lt;head&gt;
  &lt;script language=&quot;JavaScript&quot;&gt;
     function pushbutton() {
       alert(&quot;Alo!&quot;);
  }
 &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;form&gt;
  &lt;input type=&quot;button&quot; name=&quot;Button1&quot; value=&quot;Aperte-me&quot; onclick=&quot;pushbutton()&quot;&gt;
  &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;

</font></pre>
</div>

<p align="center"><font face="MS Sans Serif" size="1" color="#000000"><br>
Se você quiser testar este script agora, e estiver usando um browser habilitado ao
JavaScript, então siga adiante e aperte o botão. </font></p>

<form>
  <p><font face="MS Sans Serif" size="1" color="#000000"><input type="button" name="Button1"
  value="Aperte-me" onclick="pushbutton()"> </font></p>
</form>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">Este script irá criar
um botão, e quando você o pressiona aparece uma janela dizendo 'Alo!'. Não é legal?
Então, o que acontece neste script? Em primeiro lugar, uma função é carregada
e&nbsp;guardada na memória. Depois é criado um botão com o tag de &lt;form&gt; normal
(HTML). Existe uma coisa nova no tag de &lt;input&gt;. Lá você pode ver 'onclick'. Isto
diz ao browser que função ele tem que chamar quando o botão é pressionado (é claro
que só quando o browser suporta JavaScript). A função 'pushbutton()' é declarada no
cabeçalho (header). Quando o botão é pressionado a função é executada. Tem uma coisa
nova neste script - o método 'alerta'. Este método já é declarado no JavaScript -
desse modo você só tem que chamá-lo. Existem muitos métodos diferentes que você pode
chamar. Eu vou mostrar alguns aqui. Você pode encontrar uma descrição completa no site
da Netscape. Eu acho que essa lista vai se tornar muito maior num futuro próximo. Mas já
neste momento existem algumas coisas legais que nós podemos fazer com esses métodos já
dados. <br>
(Eu não acho que o método 'alerta' foi pensado para ser usado desta maneira - mas a
gente só está aprendendo. E desse modo é muito mais fácil de se entender. Eu espero
que você me perdoe...) <br>
</font></p>

<hr WIDTH="80%" ALIGN="center" SIZE="1">

<p align="left"><font face="MS Sans Serif" size="1" color="#000000"><br>
<br>
Nós já chegamos bem longe por agora. De fato, nós temos um monte de possibilidades
apenas adicionando funções aos nossos scripts. Agora eu vou lhe mostrar como você pode
ler alguma coisa que o usuário colocou num formulário. </font></p>
<div align="left">

<pre><font face="MS Sans Serif" size="1" color="#000000">
&lt;html&gt;
&lt;head&gt;
&lt;script language=&quot;JavaScript&quot;&gt;
&lt;!--  hide script from old browsers
  function getname(str) {
    alert(&quot;Oi, &quot;+ str+&quot;!&quot;);
  }
// end hiding contents --&gt;
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
Coloque o seu nome, por favor:
&lt;form&gt;
  &lt;input type=&quot;text&quot; name=&quot;name&quot; onBlur=&quot;getname(this.value)&quot; value=&quot;&quot;&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;

</font></pre>
</div>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000"><br>
Agora você pode testar este script novamente: <i><br>
<br>
Coloque o seu nome, por favor:</i> </font></p>

<form>
  <p><font face="MS Sans Serif" size="1" color="#000000"><input type="text" name="name"
  onBlur="getname(this.value)" value size="20"> </font></p>
</form>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">Nós temos alguns
elementos novos implementados neste script novamente. Em primeiro lugar, você certamente
notou o comentário dentro do script. Dessa maneira você pode esconder o script dos
browsers antigos que não podem rodar scripts. Você tem que manter a ordem daquilo que é
mostrado! O início do comentário deve estar logo depois do primeiro tag de
&lt;script&gt;. O comentário termina logo antes do tag de &lt;/script&gt;. Neste
documento-HTML você tem um elemento de formulário onde o usuário pode colocar o seu
nome. O 'onBlur' no tag de &lt;input&gt; avisa ao cliente que função que ele tem que
chamar quando alguma coisa é colocada dentro do formulário. A função 'getname(str)'
será chamada quando você 'deixa' este elemento de formulário, ou pressiona
o&nbsp;'enter' depois de haver colocado alguma coisa. A função pegará a seqüência que
você colocou através do coamndo 'getname(this.value)'. 'This.value' significa o valor
que você colocou neste elemento de formulário. <br>
</font></p>

<hr WIDTH="80%" ALIGN="center" SIZE="1">

<p align="left"><font face="MS Sans Serif" size="1" color="#000000"><br>
<br>
Eu acho que o próximo passo é bem legal também. Nós vamos implementar uma função de
data dentro do nosso script. Assim, se você criou uma página-HTML, você pode fazer o
cliente imprimir a última modificação no documento. Você não precisa, entretanto,
escrever a data no documento. Você simplesmente escreve um pequeno programa de script.
Quando você fizer pequenas modificações no futuro, a data se modificará
automaticamente. </font></p>
<div align="left">

<pre><font face="MS Sans Serif" size="1" color="#000000">
&lt;html&gt;
&lt;body&gt;
Esta é uma página-HTML simples.
&lt;br&gt;
Últimas modificações:
  &lt;script language=&quot;JavaScript&quot;&gt;
  &lt;!--  hide script from old browsers
    document.write(document.lastModified)
  // end hiding contents --&gt;
  &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;

</font></pre>
</div>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">No momento esta
propriedade parece não funcionar em todas as máquinas. Alguns servidores só mostram a
data 1/1/1970. Parece haver alguns problemas com essa função. Nós temos que esperar
pela próxima atualização e torcer para que isto funcione adequadamente em todas as
máquinas. Mas você pode testar isto na sua própria máquina - em algumas isso parece
funcionar muito bem. </font></p>

<p align="left"><font face="MS Sans Serif" size="1" color="#000000">Como eu já disse, as
coisas estão mudando muito rápido hoje em dia. Assim, não seria muito divertido se na
semana que vem houvesse uma tremenda mudança no JavaScript! Deste modo, você deve sempre
ficar de olho nas últimas novidades, pois essa linguagem é muito nova. Seja
compreensível se algumas das coisas aqui mencionadas também se modificarem. Mas eu acho
que os princípios básicos deverão permanecer os mesmos. </font></p>

<p align="center"><font face="MS Sans Serif" size="1" color="#000000"><br>
</font><strong><font face="MS Sans Serif" size="1" color="#000000"><a href="index.htm"
onMouseOver="stat('Introdução ao JavaScript - Pagina Principal');return true">Index</a>
- </font><font face="MS Sans Serif" size="1" color="#000000"><a href="javascr2.htm"
onMouseOver="stat('JavaScript - Introdução Parte 2');
 return true">Parte 2</a> - </font><font
face="MS Sans Serif" size="1" color="#000000"><a href="javascr3.htm"
onMouseOver="stat('JavaScript - Introdução Parte 3');
 return true">Parte 3</a> - </font><font
face="MS Sans Serif" size="1" color="#000000"><a href="javascr4.htm"
onMouseOver="stat('JavaScript - Introdução Parte 4');
 return true">Parte 4</a> - </font><font
face="MS Sans Serif" size="1" color="#000000"><a href="javascr5.htm"
onMouseOver="stat('JavaScript - Introdução Parte 5');
 return true">Parte 5</a> - </font><font
face="MS Sans Serif" size="1" color="#000000"><a href="javascr6.htm"
onMouseOver="stat('JavaScript - Introdução Parte 6');
 return true">Parte 6</a> - </font><font
face="MS Sans Serif" size="1" color="#000000"><a href="javascr7.htm"
onMouseOver="stat('JavaScript - Introdução Parte 7');
 return true">Parte 7</a> </font></strong></p>

<p align="center"><font face="MS Sans Serif" size="1" color="#000000"><br>
</font></p>
</body>
</html>
